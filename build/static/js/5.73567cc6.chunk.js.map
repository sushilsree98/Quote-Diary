{"version":3,"sources":["components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","NoQuotesFound","className","classes","noquotes","to","QuoteItem","props","item","text","slice","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","withRouter","useHttp","getAllQuotes","sendRequest","status","LoadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCa5CC,EAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,YAAzB,6B,iBCYSC,EAhBG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAQK,KAAvB,UACE,mCACE,qCACE,sCAAOD,EAAME,KAAKC,MAAM,EAAE,IAA1B,WAEF,qCAAaH,EAAMI,YAErB,cAAC,IAAD,CAAMT,UAAU,MAAMG,GAAE,kBAAaE,EAAMK,IAA3C,iC,iBCgCSC,EA7BG,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAGXC,EAA0C,QAD5B,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,QAI9BC,GAnBYV,EAmBcP,EAAMO,OAnBZC,EAmBoBK,EAlBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAexC,OACE,eAAC,WAAD,WACE,qBAAKV,UAAWC,IAAQyB,QAAxB,SACE,yBAAQC,QAPS,WACrBb,EAAQc,KAAK,iBAAkBV,EAAc,OAAS,SAMlD,kBAAuCA,EAAc,aAAe,iBAEtE,oBAAIlB,UAAWC,IAAQ4B,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVD,OAAQsB,EAAMtB,OACdF,KAAMwB,EAAMxB,MAHPwB,EAAMrB,a,wBCIRsB,uBA7BG,WACd,MAAwDC,YAAQC,KAAc,GAAvEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAaC,EAAjC,EAA4BC,KAAmBC,EAA/C,EAA+CA,MAM/C,OAJAC,qBAAU,WACNL,MACD,IAEU,WAAVC,EACQ,qBAAKpC,UAAU,WAAf,SACH,cAACyC,EAAA,EAAD,MAILL,GAAUG,EACF,qBAAKvC,UAAU,mBAAf,SACFuC,IAII,aAAVH,GAA2BC,GAAuC,GAAvBA,EAAaK,OAKpD,8BACH,cAAC,EAAD,CAAW9B,OAAQyB,MALZ,8BACH,cAAC,EAAD","file":"static/js/5.73567cc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3dTSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1z3Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__20kuC\",\"sorting\":\"QuoteList_sorting__1uqru\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{`${props.text.slice(0,30)}...`}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search)\n  const isAscending = queryParams.get('sort') === 'asc'\n  const sortingHandler = () => {\n    history.push(\"/quotes?sort=\"+ (isAscending ? 'desc' : 'asc'));\n  }\n  const sortedQuotes = sortQuotes(props.quotes, isAscending)\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sort {isAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuotes = () => {\r\n    const {sendRequest, status, data:LoadedQuotes, error} = useHttp(getAllQuotes, true)\r\n\r\n    useEffect(()=>{\r\n        sendRequest()\r\n    }, [])\r\n\r\n    if(status == 'pending'){\r\n        return <div className='centered'>\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if(status == error){\r\n        return <div className='centered focused'>\r\n            {error}\r\n        </div>\r\n    }\r\n\r\n    if(status == 'completed' && (!LoadedQuotes || LoadedQuotes.length == 0)){\r\n        return <div>\r\n            <NoQuotesFound/>\r\n        </div>\r\n    }\r\n    return <div>\r\n        <QuoteList quotes={LoadedQuotes} />\r\n    </div>\r\n}\r\n\r\nexport default withRouter(AllQuotes)"],"sourceRoot":""}