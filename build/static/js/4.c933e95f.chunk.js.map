{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","then","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetails","params","match","useRouteMatch","getSingleQuote","LoadedData","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,kICkDXC,EA5CQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEvB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAErBC,EAAmBR,EAAnBQ,eAERC,qBAAU,WACO,cAAXH,GAA2BC,GAC7BC,MAED,CAACF,EAAQC,EAAOC,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcZ,EAAea,QAAQC,MAI3CV,EAAY,CAAEW,YAAa,CAAEC,KAAMJ,GAAeK,QAASlB,EAAMkB,UAChEC,MAAK,WACLlB,EAAea,QAAQC,MAAQ,OAIlC,OACE,uBAAMK,UAAWC,IAAQC,KAAMC,SAAUb,EAAzC,UACc,YAAXJ,GACC,qBAAKc,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,MAGJ,sBAAKJ,UAAWC,IAAQI,QAASF,SAAUb,EAA3C,UACE,uBAAOgB,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAK5B,OAEvC,qBAAKmB,UAAWC,IAAQS,QAAxB,SACE,wBAAQV,UAAU,MAAlB,+B,iBCnCOW,EARK,SAAC/B,GACnB,OACE,oBAAIoB,UAAWC,IAAQW,KAAvB,SACE,4BAAIhC,EAAMiB,U,iBCQDgB,EAVM,SAACjC,GACpB,OACE,oBAAIoB,UAAWC,IAAQa,SAAvB,SACGlC,EAAMkC,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAA8BnB,KAAMmB,EAAQnB,MAA1BmB,EAAQT,UCkEnBU,EA/DE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAGQtB,EAFOuB,cAEPvB,QAER,EAAsDf,YAAQuC,KAAtDrC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcqC,EAAnC,EAA6BC,KAE7BnC,qBAAU,WACRJ,EAAYa,KACX,CAACA,EAASb,IAEb,IAWI6B,EAPEW,EAAsBC,uBAAY,WACtCzC,EAAYa,GACXC,MAAK,WACJqB,GAAmB,QAEpB,CAACnC,EAAaa,IAuBjB,MAnBe,YAAXZ,IACF4B,EACE,qBAAKd,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,OAKS,cAAXlB,GAA0BqC,GAAkBA,EAAeI,OAAS,IACtEb,EAAW,cAAC,EAAD,CAAcA,SAAUS,KAIxB,cAAXrC,GACEqC,GAA4C,IAA1BA,EAAeI,SAEnCb,EAAW,mBAAGd,UAAU,WAAb,0CAIX,0BAASA,UAAWC,IAAQa,SAA5B,UACE,gDACEK,GACA,wBAAQnB,UAAU,MAAM4B,QApCC,WAC7BR,GAAmB,IAmCf,2BAIDD,GACC,cAAC,EAAD,CACErB,QAASA,EACTV,eAAgBqC,IAGnBX,M,wBCzDQe,EATU,SAACjD,GACxB,OACE,yBAAQoB,UAAWC,IAAQ6B,MAA3B,UACE,4BAAIlD,EAAMiB,OACV,qCAAajB,EAAMmD,aCyCVC,UAtCM,WACjB,IAAMC,EAASZ,cACTa,EAAQC,cACPrC,EAAWmC,EAAXnC,QAEP,EAAsDf,YAAQqD,KAAvDnD,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAamD,EAAjC,EAA4Bb,KAAiBrC,EAA7C,EAA6CA,MAM7C,OAJAE,qBAAU,WACNJ,EAAYa,KACb,CAACb,EAAYa,IAEH,WAAVZ,EACQ,qBAAKc,UAAU,WAAf,SACH,cAACI,EAAA,EAAD,MAILjB,EACQ,qBAAKa,UAAU,mBAAf,SACFb,IAGJkD,GAAcA,EAAWxC,KAGvB,eAAC,WAAD,WACC,cAAC,EAAD,CAAkBA,KAAMwC,EAAWxC,KAAMkC,OAAQM,EAAWN,SAC5D,cAAC,IAAD,CAAOO,KAAI,UAAKJ,EAAMI,MAAQC,OAAK,EAAnC,SACA,qBAAKvC,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYwC,GAAE,UAAKN,EAAMO,IAAX,aAA9B,+BAGJ,cAAC,IAAD,CAAOH,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACI,cAAC,EAAD,SAVD","file":"static/js/4.c933e95f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2JA8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__L1uqh\",\"loading\":\"NewCommentForm_loading__2OEIJ\",\"control\":\"NewCommentForm_control__3NZX4\",\"actions\":\"NewCommentForm_actions__1runi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__YAqrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__Iw747\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1dEUE\"};","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId })\n    .then(()=>{\n     commentTextRef.current.value = ''\n    })\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n    .then(()=>{\n      setIsAddingComment(false);\n    })\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport  Comments  from \"../components/comments/Comments\"\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const params = useParams();\r\n    const match = useRouteMatch()\r\n    const {quoteId} = params\r\n\r\n    const {sendRequest, status, data:LoadedData, error} = useHttp(getSingleQuote)\r\n\r\n    useEffect(()=>{\r\n        sendRequest(quoteId)\r\n    }, [sendRequest,quoteId])\r\n\r\n    if(status == 'pending'){\r\n        return <div className='centered'>\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if(error){\r\n        return <div className='centered focused'>\r\n            {error}\r\n        </div>\r\n    }\r\n    if(!(LoadedData && LoadedData.text)){\r\n        return <p>No Quote Found</p>\r\n    }\r\n    return <Fragment>\r\n            <HighlightedQuote text={LoadedData.text} author={LoadedData.author}/>\r\n            <Route path={`${match.path}`} exact>\r\n            <div className='centered'>\r\n                <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n            </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n        </Fragment>\r\n}\r\n\r\nexport default QuoteDetails"],"sourceRoot":""}